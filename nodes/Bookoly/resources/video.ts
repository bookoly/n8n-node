import { BookolyResourceDefinition, BookolyResourceType } from '../types';
import { getSubtitleParameters } from './subtitleParams';
import {
	getNameParam,
	getUrlParam,
	getWebhookUrlParam,
	getVoiceParam,
	getIdParam,
	getResolutionParam,
	getMuteParam,
	getTypeParam,
	getSubtitleUrlParam,
	getSecParam,
	getTextParam,
	getRotateParam,
	getWaitParam,
} from './commonParams';
import { scenesParam } from './videoParams/scenes';
import { watermarkUrlParam, watermarkPositionParam } from './videoParams/watermark';
import { blurOptionParam } from './videoParams/blur';
import { clipOptionParam } from './videoParams/clip';
import {
	xCoordinateParam,
	yCoordinateParam,
	cropWidthParam,
	cropHeightParam,
} from './videoParams/crop';
import { audioUrlParam, trimAudioParam, audioVolumeParam } from './videoParams/audio';
import { splitOptionParams } from './videoParams/split';
import { videoOperations } from './videoParams/operations';

export const videoResource: BookolyResourceDefinition = {
	displayName: 'Video',
	value: BookolyResourceType.Video,
	description: 'Manage video operations',
	operations: [
		{
			displayName: 'Operation',
			name: 'operation',
			type: 'options',
			noDataExpression: true,
			displayOptions: {
				show: {
					resource: [BookolyResourceType.Video],
				},
			},
			options: videoOperations,
			default: 'generateVideo',
		},
	],
	parameters: [
		getIdParam(
			'waitForVideoGeneration',
			BookolyResourceType.Video,
			'videoId',
			'Video ID',
			'The ID of the video',
		),
		getNameParam(
			[
				'addAudioToVideo',
				'addAudioWithSubtitlesToVideo',
				'addSubtitlesToVideoFromFile',
				'addSubtitlesToVideo',
				'addWatermarkToVideo',
				'blurVideo',
				'clipVideo',
				'createSlideshow',
				'cropVideo',
				'extractAudioFromVideo',
				'frameVideo',
				'generateVideo',
				'muteVideo',
				'rotateVideo',
				'splitVideoIntoScenes',
			],
			BookolyResourceType.Video,
			'The name of the video',
		),
		getUrlParam(
			[
				'addAudioToVideo',
				'addAudioWithSubtitlesToVideo',
				'addSubtitlesToVideoFromFile',
				'addSubtitlesToVideo',
				'addWatermarkToVideo',
				'blurVideo',
				'clipVideo',
				'cropVideo',
				'extractAudioFromVideo',
				'frameVideo',
				'muteVideo',
				'rotateVideo',
				'splitVideoIntoScenes',
			],
			BookolyResourceType.Video,
			true,
			'The public and downloadable URL of the video file',
		),
		getMuteParam(
			[
				'addAudioToVideo',
				'addAudioWithSubtitlesToVideo',
				'addWatermarkToVideo',
				'blurVideo',
				'clipVideo',
				'cropVideo',
				'rotateVideo',
				'splitVideoIntoScenes',
			],
			BookolyResourceType.Video,
		),
		getResolutionParam(['createSlideshow', 'generateVideo'], BookolyResourceType.Video),
		getTextParam(
			['generateVideo'],
			BookolyResourceType.Video,
			true,
			'The text to create the speech synthesis from',
		),
		getVoiceParam('generateVideo', BookolyResourceType.Video, true, 'The name of the voice'),
		getTypeParam(['addSubtitlesToVideoFromFile'], BookolyResourceType.Video),
		getSubtitleUrlParam(
			['addSubtitlesToVideoFromFile'],
			BookolyResourceType.Video,
			true,
			'The public and downloadable URL of the subtitle file',
		),
		getSecParam(['frameVideo'], BookolyResourceType.Video),
		getRotateParam(['rotateVideo'], BookolyResourceType.Video),
		// Extracted unique/complex parameter groups
		audioUrlParam,
		trimAudioParam,
		audioVolumeParam,
		scenesParam,
		watermarkUrlParam,
		watermarkPositionParam,
		clipOptionParam,
		xCoordinateParam,
		yCoordinateParam,
		cropWidthParam,
		cropHeightParam,
		// Subtitle parameters for relevant operations
		...blurOptionParam,
		...splitOptionParams,
		...getSubtitleParameters('addAudioWithSubtitlesToVideo'),
		...getSubtitleParameters('addSubtitlesToVideo'),
		...getSubtitleParameters('generateVideo'),
		getWaitParam(
			[
				'addAudioToVideo',
				'addAudioWithSubtitlesToVideo',
				'addSubtitlesToVideoFromFile',
				'addSubtitlesToVideo',
				'addWatermarkToVideo',
				'blurVideo',
				'clipVideo',
				'createSlideshow',
				'cropVideo',
				'extractAudioFromVideo',
				'frameVideo',
				'generateVideo',
				'muteVideo',
				'rotateVideo',
				'splitVideoIntoScenes',
			],
			BookolyResourceType.Video,
			'If enabled, the node will poll the server until the video is finished and then return the full video object instead of just the creation response',
		),
		getWebhookUrlParam(
			[
				'addAudioToVideo',
				'addAudioWithSubtitlesToVideo',
				'addSubtitlesToVideoFromFile',
				'addSubtitlesToVideo',
				'addWatermarkToVideo',
				'blurVideo',
				'clipVideo',
				'createSlideshow',
				'cropVideo',
				'extractAudioFromVideo',
				'frameVideo',
				'generateVideo',
				'muteVideo',
				'rotateVideo',
				'splitVideoIntoScenes',
			],
			BookolyResourceType.Video,
			'webhook_url',
			'Enter a valid URL to receive webhook notifications. Video ID and URL will be included.',
		),
	],
};
